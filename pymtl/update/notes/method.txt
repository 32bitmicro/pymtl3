- Method-method constraint -- class Queue: M(s.enq) < M(s.deq)

- Method-upblk constraint -- class Reg: U(up_reg) < M(s.rd), U(up_reg) < M(s.wr)

- Method connection -- x1.send |= x2.recv  # only one actual method allowed?

Question: What kind of component only has actual methods? What kind of component has dummy method port?

Components with Write/read interfaces

* prototype #1 :

class A(...):
  def __init__( s ):
    s.send = MethodPort( Write ) # Write, data outbound

  def recv( s, msg ):            # Write, data inbound
    s.send( msg + 1 )

* prototype #2:

class A(...):
  def __init__( s ):
    s.send = MethodPort( Write ) # Write, data outbound
    s.recv = MethodPort( Read )  # Read, data inbound

    @s.update
    def up():
      s.send( s.recv() + 1 )

* prototype #3:

class A(...):
  def __init__( s ):
    s.recv = MethodPort( Read )  # Read, data inbound

  def send( s ):                 # Read, data outbound
    return s.recv() + 1
  
* prototype #4:

class A(...):
  def __init__( s ):
    < define list/deque/array variables >
    s.q = deque(maxlen=2)

  def send( s, msg ):            # Write, data inbound
    s.q.append( msg )

  def recv( s ):                 # Read, data outbound
    return s.q.pop()
